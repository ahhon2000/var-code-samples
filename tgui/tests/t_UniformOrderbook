#!/usr/bin/python3

import os, sys
sys.path = [".", ".."] + [os.path.dirname(os.path.abspath(sys.argv[0]))] + sys.path

from tstcommon import *
from tstcommon import TstCommon
import Config
from Liquidity import Liquidity
from Instrument import InstrumentFutures, InstrumentSwaps
from UniformOrderbook import UniformOrderbook

with TstCommon():
	ins_j = {
		'instrument_id': 'ETH-USD-190628',
		'delivery': '2019-06-28',
		'alias': 'quarter',
	}
	ins = InstrumentFutures(ins_j)

	for j in (
		{
			"asks": [
				[1.000, 100, 0, 3],
				[1.001, 100, 1, 1],
				[1.002, 100, 0, 1],
				[1.003, 100, 9, 1],
				[1.004, 100, 100, 1],
				[1.005, 100, 0, 8],
			],
			"bids": [
				[1.000, 100, 0, 3],
				[0.999, 100, 0, 1],
				[0.998, 100, 0, 1],
				[0.997, 100, 5, 2],
				[0.996, 100, 7, 9],
				[0.995, 100, 0, 1],
			],
		},
		{
			"bids": [
				[1.000, 100, 0, 3],
				[0.999, 100, 0, 1],
				[0.998, 100, 0, 1],
				[0.997, 100, 0, 2],
				[0.996, 100, 0, 9],
				[0.995, 100, 0, 1],
			],
			"asks": [
				[1.000, 100, 0, 3],
				[1.001, 100, 0, 1],
				[1.002, 100, 1, 1],
				[1.003, 100, 0, 1],
				[1.004, 100, 0, 1],
				[1.005, 100, 0, 8],
			],
		},
	):
		for direction in ["bids", "asks"]:
			for depth in [0.3, 0.5, 0.8]:
				l = Liquidity(ins, j, customDepth=depth)
				lv = l.bid if direction == 'bids' else l.ask
				u = UniformOrderbook(j)
				uv = u.valueByDepth(direction, depth)

				if l.errorMessage and not lv:
					ensure(uv is None, "uv is not None but lv is")
				elif lv:
					step = Config.UNIFORM_ORDERBOOK_DEPTH_STEP
					i = int(depth/step)
					if i + 1 < len(u.uniformLiquidities[direction]):
						ensureFloat(
							uv,
							lv,
							msg="UniformOrderbook does not interpolate Liquidity correctly",
						)
